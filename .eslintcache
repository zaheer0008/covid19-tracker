[{"/home/zaheer/MyProjects/covid19-tracker/src/index.js":"1","/home/zaheer/MyProjects/covid19-tracker/src/App.js":"2","/home/zaheer/MyProjects/covid19-tracker/src/reportWebVitals.js":"3","/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalStats.jsx":"4","/home/zaheer/MyProjects/covid19-tracker/src/api/endpoints.js":"5","/home/zaheer/MyProjects/covid19-tracker/src/api/wrapPromise.js":"6","/home/zaheer/MyProjects/covid19-tracker/src/components/ErrorBoundary.jsx":"7","/home/zaheer/MyProjects/covid19-tracker/src/components/CountryStats.jsx":"8","/home/zaheer/MyProjects/covid19-tracker/src/context/CountryContext.js":"9","/home/zaheer/MyProjects/covid19-tracker/src/CovidCharts.js":"10","/home/zaheer/MyProjects/covid19-tracker/src/components/AppHeader.jsx":"11","/home/zaheer/MyProjects/covid19-tracker/src/components/CountryDropdown.jsx":"12","/home/zaheer/MyProjects/covid19-tracker/src/components/AppFooter.jsx":"13"},{"size":489,"mtime":1608625565438,"results":"14","hashOfConfig":"15"},{"size":1180,"mtime":1609061258782,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607223593056,"results":"17","hashOfConfig":"15"},{"size":2551,"mtime":1609060438489,"results":"18","hashOfConfig":"15"},{"size":1771,"mtime":1608975397912,"results":"19","hashOfConfig":"15"},{"size":672,"mtime":1608784080714,"results":"20","hashOfConfig":"15"},{"size":739,"mtime":1607443048573,"results":"21","hashOfConfig":"15"},{"size":3114,"mtime":1609061010180,"results":"22","hashOfConfig":"15"},{"size":263848,"mtime":1608975397936,"results":"23","hashOfConfig":"15"},{"size":2400,"mtime":1608807252918,"results":"24","hashOfConfig":"15"},{"size":617,"mtime":1608794279606,"results":"25","hashOfConfig":"15"},{"size":1291,"mtime":1608978894044,"results":"26","hashOfConfig":"15"},{"size":406,"mtime":1609062063601,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"12vj9oc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/zaheer/MyProjects/covid19-tracker/src/index.js",[],["58","59"],"/home/zaheer/MyProjects/covid19-tracker/src/App.js",["60","61","62","63"],"/home/zaheer/MyProjects/covid19-tracker/src/reportWebVitals.js",[],["64","65"],"/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalStats.jsx",["66","67"],"/home/zaheer/MyProjects/covid19-tracker/src/api/endpoints.js",["68","69"],"import wrapPromise from './wrapPromise';\nimport React from 'react';\nimport CountryContext from \"../context/CountryContext\";\n\nconst globalStatsUrl = 'https://disease.sh/v3/covid-19/all';\nconst countryStatsUrl = 'https://disease.sh/v3/covid-19/countries/';\nconst countryTimeSeriesUrl = \"https://disease.sh/v3/covid-19/historical/\";\nconst globalTimeSeries = \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\";\n\nfunction fetchGlobalStats(){\n    let totalsPromise = fetchGlobalTotals();\n    let timeSeriesPromise = fetchGlobalTimeSeries();\n\n    return {\n        totals: wrapPromise(totalsPromise),\n        timeSeriesData: wrapPromise(timeSeriesPromise),\n    };\n}\n\nfunction fetchGlobalTotals() {\n    console.log(\"fetching global totals....\");\n    let promise = fetch(globalStatsUrl)\n        .then((res) => res.json())\n        return promise;\n}\nfunction fetchGlobalTimeSeries(){\n    console.log(\"fetching global time series....\");\n    let promise = fetch(globalTimeSeries)\n        .then((res) => res.json())\n        return promise;\n}\n\nfunction fetchCountryData(name) {\n    let countryTotals = fetchCountryTotals(name);\n    let countryTimeSeries = fetchCountryTimeSeries(name);\n\n    return {\n        cTotals: wrapPromise(countryTotals),\n        cTimeSeriesData: wrapPromise(countryTimeSeries)\n    };\n}\n\nfunction fetchCountryTotals(name) {\n    console.log(\"fetching country totals for \"+ name);\n    let promise = fetch(countryStatsUrl+name)\n    .then((res)=> (res.json()))\n\n    return promise;\n}\n\nfunction fetchCountryTimeSeries(name) {\n    console.log(\"fetching country time series data for \"+ name);\n    let promise = fetch(countryTimeSeriesUrl+name+\"?lastdays=all\")\n        .then((res)=> res.json());\n\n    return promise;\n}\n\nexport {fetchGlobalStats,fetchCountryData}","/home/zaheer/MyProjects/covid19-tracker/src/api/wrapPromise.js",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/ErrorBoundary.jsx",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/CountryStats.jsx",["70","71","72","73"],"/home/zaheer/MyProjects/covid19-tracker/src/context/CountryContext.js",[],"/home/zaheer/MyProjects/covid19-tracker/src/CovidCharts.js",["74","75"],"import Chart from \"chart.js\";\n\nvar tChartData = {\n    // labels: ['Red', 'Blue', 'Yellow'],\n    datasets: [{\n        label: 'Confirmed Cases',\n        // data: [12,50,30,],\n        hoverBackgroundColor: 'pink',\n        borderWidth: 2,\n        fill: false,\n        borderColor: 'cyan'\n    },\n    {\n        label: 'Recovered',\n        // data: [12,50,30,],\n        hoverBackgroundColor: 'LimeGreen',\n        borderWidth: 2,\n        fill: false,\n        borderColor: 'ForestGreen'\n    },\n    {\n        label: 'Deaths',\n        // data: [12,50,30,],\n        hoverBackgroundColor: 'Fuchsia',\n        borderWidth: 2,\n        fill: false,\n        borderColor: 'HotPink'\n    }]\n};\n\nvar tChartOptions = {\n    scales: {\n        yAxes: [{\n            ticks: {\n                beginAtZero: true\n            }\n        }]\n    },\n    elements: {\n        point:{\n            radius: 0\n        }\n    },\n};\n\nfunction CountryTimeSeriesChart(ctx, data, titleText) {\n    var timeSeriesChart = new Chart(ctx, {\n        type: 'line',\n        data: tChartData,\n        options: tChartOptions\n    });\n    timeSeriesChart.options.title = {display: true, text: \"Historical data for \"+titleText};\n    var dates = Object.keys(data.timeline.cases);\n    var activeCases = Object.values(data.timeline.cases);\n    var recovered = Object.values(data.timeline.recovered);\n    var deaths = Object.values(data.timeline.deaths);\n    const AllData = new Array(activeCases, recovered, deaths);\n    console.log(AllData);\n    addTimeSeriesData(timeSeriesChart, dates, AllData);\n};\n\nfunction GlobalTimeSeriesChart(ctx, data) {\n    var timeSeriesChart = new Chart(ctx, {\n        type: 'line',\n        data: tChartData,\n        options: tChartOptions\n    });\n    var dates = Object.keys(data.cases);\n    var activeCases = Object.values(data.cases);\n    var recovered = Object.values(data.recovered);\n    var deaths = Object.values(data.deaths);\n    const AllData = new Array(activeCases, recovered, deaths);\n    console.log(AllData);\n    addTimeSeriesData(timeSeriesChart, dates, AllData);\n};\n\nfunction addTimeSeriesData(chart, label, data) {\n    chart.data.datasets.forEach((dataset) => {\n        dataset.data.pop();\n    });\n    chart.update();\n    chart.data.labels=label;\n\n    chart.data.datasets.forEach((dataset, i) => {\n        dataset.data = data[i];\n    });\n    chart.update();\n}\n\nexport { CountryTimeSeriesChart, GlobalTimeSeriesChart }","/home/zaheer/MyProjects/covid19-tracker/src/components/AppHeader.jsx",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/CountryDropdown.jsx",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/AppFooter.jsx",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20},{"ruleId":"81","severity":1,"message":"86","line":6,"column":20,"nodeType":"83","messageId":"84","endLine":6,"endColumn":28},{"ruleId":"81","severity":1,"message":"87","line":8,"column":10,"nodeType":"83","messageId":"84","endLine":8,"endColumn":26},{"ruleId":"77","replacedBy":"88"},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","severity":1,"message":"90","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":17},{"ruleId":"81","severity":1,"message":"86","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":18},{"ruleId":"81","severity":1,"message":"91","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":13},{"ruleId":"81","severity":1,"message":"92","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":22},{"ruleId":"81","severity":1,"message":"86","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"90","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":17},{"ruleId":"81","severity":1,"message":"87","line":8,"column":10,"nodeType":"83","messageId":"84","endLine":8,"endColumn":26},{"ruleId":"81","severity":1,"message":"93","line":14,"column":11,"nodeType":"83","messageId":"84","endLine":14,"endColumn":21},{"ruleId":"94","severity":1,"message":"95","line":57,"column":21,"nodeType":"96","messageId":"97","endLine":57,"endColumn":62},{"ruleId":"94","severity":1,"message":"95","line":72,"column":21,"nodeType":"96","messageId":"97","endLine":72,"endColumn":62},{"ruleId":"81","severity":1,"message":"98","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":18},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CountryStats' is defined but never used.","'useState' is defined but never used.","'fetchCountryData' is defined but never used.",["99"],["100"],"'Container' is defined but never used.","'React' is defined but never used.","'CountryContext' is defined but never used.","'counteries' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'blueGrey' is defined but never used.","no-global-assign","no-unsafe-negation"]