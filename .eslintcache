[{"/home/zaheer/MyProjects/covid19-tracker/src/index.js":"1","/home/zaheer/MyProjects/covid19-tracker/src/App.js":"2","/home/zaheer/MyProjects/covid19-tracker/src/reportWebVitals.js":"3","/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalStats.jsx":"4","/home/zaheer/MyProjects/covid19-tracker/src/api/endpoints.js":"5","/home/zaheer/MyProjects/covid19-tracker/src/api/wrapPromise.js":"6","/home/zaheer/MyProjects/covid19-tracker/src/components/ErrorBoundary.jsx":"7","/home/zaheer/MyProjects/covid19-tracker/src/components/CountryStats.jsx":"8","/home/zaheer/MyProjects/covid19-tracker/src/context/CountryContext.js":"9","/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalTimeSeriesData.jsx":"10","/home/zaheer/MyProjects/covid19-tracker/src/CovidCharts.js":"11","/home/zaheer/MyProjects/covid19-tracker/src/components/AppHeader.jsx":"12"},{"size":489,"mtime":1608625565438,"results":"13","hashOfConfig":"14"},{"size":1407,"mtime":1608808080330,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607223593056,"results":"16","hashOfConfig":"14"},{"size":2798,"mtime":1608795277377,"results":"17","hashOfConfig":"14"},{"size":1771,"mtime":1608803345270,"results":"18","hashOfConfig":"14"},{"size":672,"mtime":1608784080714,"results":"19","hashOfConfig":"14"},{"size":739,"mtime":1607443048573,"results":"20","hashOfConfig":"14"},{"size":3549,"mtime":1608806523581,"results":"21","hashOfConfig":"14"},{"size":263848,"mtime":1608791870722,"results":"22","hashOfConfig":"14"},{"size":314,"mtime":1608713356737,"results":"23","hashOfConfig":"14"},{"size":2400,"mtime":1608807252918,"results":"24","hashOfConfig":"14"},{"size":617,"mtime":1608794279606,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"12vj9oc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/zaheer/MyProjects/covid19-tracker/src/index.js",[],["55","56"],"/home/zaheer/MyProjects/covid19-tracker/src/App.js",["57"],"/home/zaheer/MyProjects/covid19-tracker/src/reportWebVitals.js",[],["58","59"],"/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalStats.jsx",["60"],"import {fetchGlobalStats} from '../api/endpoints'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { useState } from \"react\";\nimport { GlobalTimeSeriesChart } from \"../CovidCharts\";\n\n\n const resource = fetchGlobalStats();\nfunction GlobalStats() {\n    const stats = resource.totals.read();\n    const timeSeriesResult = resource.timeSeriesData.read();\n    GlobalTimeSeriesChart(document.getElementById(\"GlobalChart\"), timeSeriesResult);\n\n    const useStyles = makeStyles((theme) => ({\n      root: {\n        flexGrow: 1,\n      },\n      cases: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'DarkOrchid', //'linear-gradient(45deg,  lightblue 30%, rgb(126, 190, 211) 50%)',\n        '&:hover': {\n          background: 'DarkMagenta',\n        }\n      },\n      recovered: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'LimeGreen',\n        '&:hover': {\n          background: 'ForestGreen',\n        }\n      },\n      deaths: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'HotPink',\n        '&:hover': {\n          background: 'Fuchsia',\n        }\n      },\n    }));\n    const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\" className=\"full-height\">\n      {/* <Grid Container spacing={3}>\n        <Grid item xs>\n          <h2>Global Data</h2>\n        </Grid>\n      </Grid> */}\n      \n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper elevation={3} className={classes.cases}>Total Cases<p> <strong>{stats.cases}</strong> </p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.recovered}>Total Recovered<p><strong> {stats.recovered}</strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.deaths}>Total Deaths<p><strong> {stats.deaths} </strong></p></Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper className={classes.cases}>Today Cases<p><strong> {stats.todayCases} </strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.recovered}>Today Recovered<p><strong> {stats.todayRecovered}</strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.deaths}>Today Deaths<p><strong> {stats.todayDeaths}</strong></p></Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default GlobalStats  \n\n","/home/zaheer/MyProjects/covid19-tracker/src/api/endpoints.js",["61","62"],"import wrapPromise from './wrapPromise';\nimport React from 'react';\nimport CountryContext from \"../context/CountryContext\";\n\nconst globalStatsUrl = 'https://disease.sh/v3/covid-19/all';\nconst countryStatsUrl = 'https://disease.sh/v3/covid-19/countries/';\nconst countryTimeSeriesUrl = \"https://disease.sh/v3/covid-19/historical/\";\nconst globalTimeSeries = \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\";\n\nfunction fetchGlobalStats(){\n    let totalsPromise = fetchGlobalTotals();\n    let timeSeriesPromise = fetchGlobalTimeSeries();\n\n    return {\n        totals: wrapPromise(totalsPromise),\n        timeSeriesData: wrapPromise(timeSeriesPromise),\n    };\n}\n\nfunction fetchGlobalTotals() {\n    console.log(\"fetching global totals....\");\n    let promise = fetch(globalStatsUrl)\n        .then((res) => res.json())\n        return promise;\n}\nfunction fetchGlobalTimeSeries(){\n    console.log(\"fetching global time series....\");\n    let promise = fetch(globalTimeSeries)\n        .then((res) => res.json())\n        return promise;\n}\n\nfunction fetchCountryData(name) {\n    let countryTotals = fetchCountryTotals(name);\n    let countryTimeSeries = fetchCountryTimeSeries(name);\n\n    return {\n        cTotals: wrapPromise(countryTotals),\n        cTimeSeriesData: wrapPromise(countryTimeSeries)\n    };\n}\n\nfunction fetchCountryTotals(name) {\n    console.log(\"fetching country totals for \"+ name);\n    let promise = fetch(countryStatsUrl+name)\n    .then((res)=> (res.json()))\n\n    return promise;\n}\n\nfunction fetchCountryTimeSeries(name) {\n    console.log(\"fetching country time series data for \"+ name);\n    let promise = fetch(countryTimeSeriesUrl+name+\"?lastdays=all\")\n        .then((res)=> res.json());\n\n    return promise;\n}\n\nexport {fetchGlobalStats,fetchCountryData}","/home/zaheer/MyProjects/covid19-tracker/src/api/wrapPromise.js",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/ErrorBoundary.jsx",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/CountryStats.jsx",["63","64"],"/home/zaheer/MyProjects/covid19-tracker/src/context/CountryContext.js",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalTimeSeriesData.jsx",[],["65","66"],"/home/zaheer/MyProjects/covid19-tracker/src/CovidCharts.js",["67","68"],"/home/zaheer/MyProjects/covid19-tracker/src/components/AppHeader.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":12},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","replacedBy":"78"},{"ruleId":"73","severity":1,"message":"79","line":6,"column":10,"nodeType":"75","messageId":"76","endLine":6,"endColumn":18},{"ruleId":"73","severity":1,"message":"80","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":13},{"ruleId":"73","severity":1,"message":"81","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":22},{"ruleId":"73","severity":1,"message":"79","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"82","line":8,"column":10,"nodeType":"75","messageId":"76","endLine":8,"endColumn":26},{"ruleId":"69","replacedBy":"83"},{"ruleId":"71","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":57,"column":21,"nodeType":"87","messageId":"88","endLine":57,"endColumn":62},{"ruleId":"85","severity":1,"message":"86","line":72,"column":21,"nodeType":"87","messageId":"88","endLine":72,"endColumn":62},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["89"],["90"],"'useState' is defined but never used.","'React' is defined but never used.","'CountryContext' is defined but never used.","'fetchCountryData' is defined but never used.",["89"],["90"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation"]