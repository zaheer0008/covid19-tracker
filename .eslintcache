[{"/home/zaheer/MyProjects/covid19-tracker/src/index.js":"1","/home/zaheer/MyProjects/covid19-tracker/src/App.js":"2","/home/zaheer/MyProjects/covid19-tracker/src/reportWebVitals.js":"3","/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalStats.jsx":"4","/home/zaheer/MyProjects/covid19-tracker/src/api/endpoints.js":"5","/home/zaheer/MyProjects/covid19-tracker/src/api/wrapPromise.js":"6","/home/zaheer/MyProjects/covid19-tracker/src/components/ErrorBoundary.jsx":"7","/home/zaheer/MyProjects/covid19-tracker/src/components/CountryStats.jsx":"8","/home/zaheer/MyProjects/covid19-tracker/src/context/CountryContext.js":"9","/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalTimeSeriesData.jsx":"10","/home/zaheer/MyProjects/covid19-tracker/src/CovidCharts.js":"11","/home/zaheer/MyProjects/covid19-tracker/src/components/AppHeader.jsx":"12"},{"size":489,"mtime":1608625565438,"results":"13","hashOfConfig":"14"},{"size":1493,"mtime":1608797247789,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607223593056,"results":"16","hashOfConfig":"14"},{"size":2798,"mtime":1608795277377,"results":"17","hashOfConfig":"14"},{"size":1771,"mtime":1608803345270,"results":"18","hashOfConfig":"14"},{"size":672,"mtime":1608784080714,"results":"19","hashOfConfig":"14"},{"size":739,"mtime":1607443048573,"results":"20","hashOfConfig":"14"},{"size":3530,"mtime":1608798822247,"results":"21","hashOfConfig":"14"},{"size":263848,"mtime":1608791870722,"results":"22","hashOfConfig":"14"},{"size":314,"mtime":1608713356737,"results":"23","hashOfConfig":"14"},{"size":2296,"mtime":1608805603816,"results":"24","hashOfConfig":"14"},{"size":617,"mtime":1608794279606,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"12vj9oc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/zaheer/MyProjects/covid19-tracker/src/index.js",[],["57","58"],"/home/zaheer/MyProjects/covid19-tracker/src/App.js",["59"],"import logo from './logo.svg';\nimport './App.css';\nimport GlobalStats from './components/GlobalStats';\nimport { Container } from '@material-ui/core';\nimport CountryStats from './components/CountryStats';\nimport { Suspense, useState } from 'react';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { fetchCountryData } from './api/endpoints';\nimport { AppHeader } from \"./components/AppHeader\";\n\nfunction App() {\n  const [countryName, setCountryName] = useState(\"Afghanistan\");\n  var src = fetchCountryData(countryName);\n  const ChangeAction = ()=>{\n    let name = document.getElementById(\"ddlSelectCountry\").value;\n    setCountryName(name);\n  }\n  \n  return (\n    <Container className=\"spinner-grow text-light\" maxWidth=\"md\">\n      <AppHeader />\n      <h1>Realtime statistics about the covid-19 pandaemic situation.</h1>\n      <ErrorBoundary>\n      <Suspense fallback={<div className=\"loader\"></div>}>\n          <GlobalStats />\n          <canvas id=\"GlobalChart\" width=\"400\" height=\"400\" aria-label=\"Global Time Series Data\" role=\"img\">\n          \n          </canvas>\n      </Suspense>\n      </ErrorBoundary>\n      <ErrorBoundary>\n      <Suspense fallback={<div>Loading....</div>}>\n        <CountryStats onCountryChange={ChangeAction} resource= {src} />\n      </Suspense>\n      </ErrorBoundary>\n      <canvas id=\"CountryChart\" width=\"400\" height=\"400\" aria-label=\"Country Time Series Data\" role=\"img\">\n            \n      </canvas>\n    </Container>\n  );\n  \n}\n\n\nexport default App;\n","/home/zaheer/MyProjects/covid19-tracker/src/reportWebVitals.js",[],["60","61"],"/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalStats.jsx",["62"],"import {fetchGlobalStats} from '../api/endpoints'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { useState } from \"react\";\nimport { GlobalTimeSeriesChart } from \"../CovidCharts\";\n\n\n const resource = fetchGlobalStats();\nfunction GlobalStats() {\n    const stats = resource.totals.read();\n    const timeSeriesResult = resource.timeSeriesData.read();\n    GlobalTimeSeriesChart(document.getElementById(\"GlobalChart\"), timeSeriesResult);\n\n    const useStyles = makeStyles((theme) => ({\n      root: {\n        flexGrow: 1,\n      },\n      cases: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'DarkOrchid', //'linear-gradient(45deg,  lightblue 30%, rgb(126, 190, 211) 50%)',\n        '&:hover': {\n          background: 'DarkMagenta',\n        }\n      },\n      recovered: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'LimeGreen',\n        '&:hover': {\n          background: 'ForestGreen',\n        }\n      },\n      deaths: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'HotPink',\n        '&:hover': {\n          background: 'Fuchsia',\n        }\n      },\n    }));\n    const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\" className=\"full-height\">\n      {/* <Grid Container spacing={3}>\n        <Grid item xs>\n          <h2>Global Data</h2>\n        </Grid>\n      </Grid> */}\n      \n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper elevation={3} className={classes.cases}>Total Cases<p> <strong>{stats.cases}</strong> </p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.recovered}>Total Recovered<p><strong> {stats.recovered}</strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.deaths}>Total Deaths<p><strong> {stats.deaths} </strong></p></Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper className={classes.cases}>Today Cases<p><strong> {stats.todayCases} </strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.recovered}>Today Recovered<p><strong> {stats.todayRecovered}</strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.deaths}>Today Deaths<p><strong> {stats.todayDeaths}</strong></p></Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default GlobalStats  \n\n","/home/zaheer/MyProjects/covid19-tracker/src/api/endpoints.js",["63","64"],"import wrapPromise from './wrapPromise';\nimport React from 'react';\nimport CountryContext from \"../context/CountryContext\";\n\nconst globalStatsUrl = 'https://disease.sh/v3/covid-19/all';\nconst countryStatsUrl = 'https://disease.sh/v3/covid-19/countries/';\nconst countryTimeSeriesUrl = \"https://disease.sh/v3/covid-19/historical/\";\nconst globalTimeSeries = \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\";\n\nfunction fetchGlobalStats(){\n    let totalsPromise = fetchGlobalTotals();\n    let timeSeriesPromise = fetchGlobalTimeSeries();\n\n    return {\n        totals: wrapPromise(totalsPromise),\n        timeSeriesData: wrapPromise(timeSeriesPromise),\n    };\n}\n\nfunction fetchGlobalTotals() {\n    console.log(\"fetching global totals....\");\n    let promise = fetch(globalStatsUrl)\n        .then((res) => res.json())\n        return promise;\n}\nfunction fetchGlobalTimeSeries(){\n    console.log(\"fetching global time series....\");\n    let promise = fetch(globalTimeSeries)\n        .then((res) => res.json())\n        return promise;\n}\n\nfunction fetchCountryData(name) {\n    let countryTotals = fetchCountryTotals(name);\n    let countryTimeSeries = fetchCountryTimeSeries(name);\n\n    return {\n        cTotals: wrapPromise(countryTotals),\n        cTimeSeriesData: wrapPromise(countryTimeSeries)\n    };\n}\n\nfunction fetchCountryTotals(name) {\n    console.log(\"fetching country totals for \"+ name);\n    let promise = fetch(countryStatsUrl+name)\n    .then((res)=> (res.json()))\n\n    return promise;\n}\n\nfunction fetchCountryTimeSeries(name) {\n    console.log(\"fetching country time series data for \"+ name);\n    let promise = fetch(countryTimeSeriesUrl+name+\"?lastdays=all\")\n        .then((res)=> res.json());\n\n    return promise;\n}\n\nexport {fetchGlobalStats,fetchCountryData}","/home/zaheer/MyProjects/covid19-tracker/src/api/wrapPromise.js",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/ErrorBoundary.jsx",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/CountryStats.jsx",["65","66"],"import React, { useState } from 'react';  \nimport CountryContext from '../context/CountryContext';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { CountryTimeSeriesChart } from \"../CovidCharts\";\nimport { fetchCountryData } from '../api/endpoints';\n\n// var resource = fetchCountryData(countryNmae);\nfunction CountryStats(props){\n    const resource = props.resource;\n    const response = resource.cTotals.read();\n    const counteries =React.useContext(CountryContext)[0];\n    const timeSeriesResult = props.resource.cTimeSeriesData.read();\n    CountryTimeSeriesChart(document.getElementById(\"CountryChart\").getContext('2d'), timeSeriesResult);\n    \n    const useStyles = makeStyles((theme) => ({\n      root: {\n        flexGrow: 1,\n      },\n      cases: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'DarkOrchid', \n        '&:hover': {\n          background: 'DarkMagenta',\n        }\n      },\n      recovered: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'LimeGreen',\n        '&:hover': {\n          background: 'ForestGreen',\n        }\n      },\n      deaths: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'HotPink',\n        '&:hover': {\n          background: 'Fuchsia',\n        }\n      },\n    }));\n    const classes = useStyles();\n    \n    return(\n            <Container maxWidth='md'>\n                <div>\n                    <h2>Please select country to view data.</h2>\n                    <select id=\"ddlSelectCountry\" onChange={props.onCountryChange}>\n                        {counteries.map((country)=>(\n                            <option key={country.name} value={country.name}> {country.name} </option>\n                        ))}\n                    </select>\n                </div>\n                <h3 className=\"error\">{response.message}</h3>\n                <Grid container spacing={3}>\n                    <Grid item xs>\n                    <Paper className={classes.cases}>Total Cases:<p> <strong>{response.cases}</strong> </p></Paper>\n                    </Grid>\n                    <Grid item xs>\n                    <Paper className={classes.recovered}>Total Recovered:<p><strong> {response.recovered}</strong></p></Paper>\n                    </Grid>\n                    <Grid item xs>\n                    <Paper className={classes.deaths}>Total Deaths:<p><strong> {response.deaths} </strong></p></Paper>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                    <Grid item xs>\n                    <Paper className={classes.cases}>Today Cases:<p><strong> {response.todayCases} </strong></p></Paper>\n                    </Grid>\n                    <Grid item xs>\n                    <Paper className={classes.recovered}>Today Recovered:<p><strong> {response.todayRecovered}</strong></p></Paper>\n                    </Grid>\n                    <Grid item xs>\n                    <Paper className={classes.deaths}>Today Deaths:<p><strong> {response.todayDeaths}</strong></p></Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n    )\n}\n\nexport default CountryStats","/home/zaheer/MyProjects/covid19-tracker/src/context/CountryContext.js",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalTimeSeriesData.jsx",[],["67","68"],"/home/zaheer/MyProjects/covid19-tracker/src/CovidCharts.js",["69","70"],"/home/zaheer/MyProjects/covid19-tracker/src/components/AppHeader.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},{"ruleId":"75","severity":1,"message":"81","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":18},{"ruleId":"75","severity":1,"message":"82","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":13},{"ruleId":"75","severity":1,"message":"83","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":22},{"ruleId":"75","severity":1,"message":"81","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"84","line":8,"column":10,"nodeType":"77","messageId":"78","endLine":8,"endColumn":26},{"ruleId":"71","replacedBy":"85"},{"ruleId":"73","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":57,"column":21,"nodeType":"89","messageId":"90","endLine":57,"endColumn":62},{"ruleId":"87","severity":1,"message":"88","line":72,"column":21,"nodeType":"89","messageId":"90","endLine":72,"endColumn":62},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["91"],["92"],"'useState' is defined but never used.","'React' is defined but never used.","'CountryContext' is defined but never used.","'fetchCountryData' is defined but never used.",["91"],["92"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation"]