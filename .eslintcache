[{"/home/zaheer/MyProjects/covid19-tracker/src/index.js":"1","/home/zaheer/MyProjects/covid19-tracker/src/App.js":"2","/home/zaheer/MyProjects/covid19-tracker/src/reportWebVitals.js":"3","/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalStats.jsx":"4","/home/zaheer/MyProjects/covid19-tracker/src/api/endpoints.js":"5","/home/zaheer/MyProjects/covid19-tracker/src/api/wrapPromise.js":"6","/home/zaheer/MyProjects/covid19-tracker/src/components/ErrorBoundary.jsx":"7","/home/zaheer/MyProjects/covid19-tracker/src/components/CountryStats.jsx":"8","/home/zaheer/MyProjects/covid19-tracker/src/context/CountryContext.js":"9","/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalTimeSeriesData.jsx":"10","/home/zaheer/MyProjects/covid19-tracker/src/CovidCharts.js":"11","/home/zaheer/MyProjects/covid19-tracker/src/components/AppHeader.jsx":"12","/home/zaheer/MyProjects/covid19-tracker/src/components/CountryDropdown.jsx":"13"},{"size":489,"mtime":1608625565438,"results":"14","hashOfConfig":"15"},{"size":1148,"mtime":1608978964468,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607223593056,"results":"17","hashOfConfig":"15"},{"size":2798,"mtime":1608795277377,"results":"18","hashOfConfig":"15"},{"size":1771,"mtime":1608975397912,"results":"19","hashOfConfig":"15"},{"size":672,"mtime":1608784080714,"results":"20","hashOfConfig":"15"},{"size":739,"mtime":1607443048573,"results":"21","hashOfConfig":"15"},{"size":3142,"mtime":1608977351620,"results":"22","hashOfConfig":"15"},{"size":263848,"mtime":1608975397936,"results":"23","hashOfConfig":"15"},{"size":314,"mtime":1608713356737,"results":"24","hashOfConfig":"15"},{"size":2400,"mtime":1608807252918,"results":"25","hashOfConfig":"15"},{"size":617,"mtime":1608794279606,"results":"26","hashOfConfig":"15"},{"size":1291,"mtime":1608978894044,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"12vj9oc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/zaheer/MyProjects/covid19-tracker/src/index.js",[],["59","60"],"/home/zaheer/MyProjects/covid19-tracker/src/App.js",["61","62","63","64"],"/home/zaheer/MyProjects/covid19-tracker/src/reportWebVitals.js",[],["65","66"],"/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalStats.jsx",["67"],"import {fetchGlobalStats} from '../api/endpoints'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { useState } from \"react\";\nimport { GlobalTimeSeriesChart } from \"../CovidCharts\";\n\n\n const resource = fetchGlobalStats();\nfunction GlobalStats() {\n    const stats = resource.totals.read();\n    const timeSeriesResult = resource.timeSeriesData.read();\n    GlobalTimeSeriesChart(document.getElementById(\"GlobalChart\"), timeSeriesResult);\n\n    const useStyles = makeStyles((theme) => ({\n      root: {\n        flexGrow: 1,\n      },\n      cases: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'DarkOrchid', //'linear-gradient(45deg,  lightblue 30%, rgb(126, 190, 211) 50%)',\n        '&:hover': {\n          background: 'DarkMagenta',\n        }\n      },\n      recovered: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'LimeGreen',\n        '&:hover': {\n          background: 'ForestGreen',\n        }\n      },\n      deaths: {\n        padding: theme.spacing(2),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'HotPink',\n        '&:hover': {\n          background: 'Fuchsia',\n        }\n      },\n    }));\n    const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\" className=\"full-height\">\n      {/* <Grid Container spacing={3}>\n        <Grid item xs>\n          <h2>Global Data</h2>\n        </Grid>\n      </Grid> */}\n      \n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper elevation={3} className={classes.cases}>Total Cases<p> <strong>{stats.cases}</strong> </p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.recovered}>Total Recovered<p><strong> {stats.recovered}</strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.deaths}>Total Deaths<p><strong> {stats.deaths} </strong></p></Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper className={classes.cases}>Today Cases<p><strong> {stats.todayCases} </strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.recovered}>Today Recovered<p><strong> {stats.todayRecovered}</strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.deaths}>Today Deaths<p><strong> {stats.todayDeaths}</strong></p></Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default GlobalStats  \n\n","/home/zaheer/MyProjects/covid19-tracker/src/api/endpoints.js",["68","69"],"/home/zaheer/MyProjects/covid19-tracker/src/api/wrapPromise.js",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/ErrorBoundary.jsx",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/CountryStats.jsx",["70","71","72"],"/home/zaheer/MyProjects/covid19-tracker/src/context/CountryContext.js",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalTimeSeriesData.jsx",[],["73","74"],"/home/zaheer/MyProjects/covid19-tracker/src/CovidCharts.js",["75","76"],"import Chart from \"chart.js\";\n\nvar tChartData = {\n    // labels: ['Red', 'Blue', 'Yellow'],\n    datasets: [{\n        label: 'Confirmed Cases',\n        // data: [12,50,30,],\n        hoverBackgroundColor: 'pink',\n        borderWidth: 2,\n        fill: false,\n        borderColor: 'cyan'\n    },\n    {\n        label: 'Recovered',\n        // data: [12,50,30,],\n        hoverBackgroundColor: 'LimeGreen',\n        borderWidth: 2,\n        fill: false,\n        borderColor: 'ForestGreen'\n    },\n    {\n        label: 'Deaths',\n        // data: [12,50,30,],\n        hoverBackgroundColor: 'Fuchsia',\n        borderWidth: 2,\n        fill: false,\n        borderColor: 'HotPink'\n    }]\n};\n\nvar tChartOptions = {\n    scales: {\n        yAxes: [{\n            ticks: {\n                beginAtZero: true\n            }\n        }]\n    },\n    elements: {\n        point:{\n            radius: 0\n        }\n    },\n};\n\nfunction CountryTimeSeriesChart(ctx, data, titleText) {\n    var timeSeriesChart = new Chart(ctx, {\n        type: 'line',\n        data: tChartData,\n        options: tChartOptions\n    });\n    timeSeriesChart.options.title = {display: true, text: \"Historical data for \"+titleText};\n    var dates = Object.keys(data.timeline.cases);\n    var activeCases = Object.values(data.timeline.cases);\n    var recovered = Object.values(data.timeline.recovered);\n    var deaths = Object.values(data.timeline.deaths);\n    const AllData = new Array(activeCases, recovered, deaths);\n    console.log(AllData);\n    addTimeSeriesData(timeSeriesChart, dates, AllData);\n};\n\nfunction GlobalTimeSeriesChart(ctx, data) {\n    var timeSeriesChart = new Chart(ctx, {\n        type: 'line',\n        data: tChartData,\n        options: tChartOptions\n    });\n    var dates = Object.keys(data.cases);\n    var activeCases = Object.values(data.cases);\n    var recovered = Object.values(data.recovered);\n    var deaths = Object.values(data.deaths);\n    const AllData = new Array(activeCases, recovered, deaths);\n    console.log(AllData);\n    addTimeSeriesData(timeSeriesChart, dates, AllData);\n};\n\nfunction addTimeSeriesData(chart, label, data) {\n    chart.data.datasets.forEach((dataset) => {\n        dataset.data.pop();\n    });\n    chart.update();\n    chart.data.labels=label;\n\n    chart.data.datasets.forEach((dataset, i) => {\n        dataset.data = data[i];\n    });\n    chart.update();\n}\n\nexport { CountryTimeSeriesChart, GlobalTimeSeriesChart }","/home/zaheer/MyProjects/covid19-tracker/src/components/AppHeader.jsx",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/CountryDropdown.jsx",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20},{"ruleId":"81","severity":1,"message":"86","line":6,"column":20,"nodeType":"83","messageId":"84","endLine":6,"endColumn":28},{"ruleId":"81","severity":1,"message":"87","line":8,"column":10,"nodeType":"83","messageId":"84","endLine":8,"endColumn":26},{"ruleId":"77","replacedBy":"88"},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","severity":1,"message":"86","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":18},{"ruleId":"81","severity":1,"message":"90","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":13},{"ruleId":"81","severity":1,"message":"91","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":22},{"ruleId":"81","severity":1,"message":"86","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"87","line":8,"column":10,"nodeType":"83","messageId":"84","endLine":8,"endColumn":26},{"ruleId":"81","severity":1,"message":"92","line":14,"column":11,"nodeType":"83","messageId":"84","endLine":14,"endColumn":21},{"ruleId":"77","replacedBy":"93"},{"ruleId":"79","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":57,"column":21,"nodeType":"97","messageId":"98","endLine":57,"endColumn":62},{"ruleId":"95","severity":1,"message":"96","line":72,"column":21,"nodeType":"97","messageId":"98","endLine":72,"endColumn":62},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CountryStats' is defined but never used.","'useState' is defined but never used.","'fetchCountryData' is defined but never used.",["99"],["100"],"'React' is defined but never used.","'CountryContext' is defined but never used.","'counteries' is assigned a value but never used.",["99"],["100"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation"]