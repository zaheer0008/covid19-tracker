[{"/home/zaheer/MyProjects/covid19-tracker/src/index.js":"1","/home/zaheer/MyProjects/covid19-tracker/src/App.js":"2","/home/zaheer/MyProjects/covid19-tracker/src/reportWebVitals.js":"3","/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalStats.jsx":"4","/home/zaheer/MyProjects/covid19-tracker/src/api/endpoints.js":"5","/home/zaheer/MyProjects/covid19-tracker/src/api/wrapPromise.js":"6","/home/zaheer/MyProjects/covid19-tracker/src/components/ErrorBoundary.jsx":"7","/home/zaheer/MyProjects/covid19-tracker/src/components/CountryStats.jsx":"8","/home/zaheer/MyProjects/covid19-tracker/src/context/CountryContext.js":"9","/home/zaheer/MyProjects/covid19-tracker/src/CovidCharts.js":"10","/home/zaheer/MyProjects/covid19-tracker/src/components/AppHeader.jsx":"11","/home/zaheer/MyProjects/covid19-tracker/src/components/CountryDropdown.jsx":"12","/home/zaheer/MyProjects/covid19-tracker/src/components/AppFooter.jsx":"13"},{"size":489,"mtime":1608625565438,"results":"14","hashOfConfig":"15"},{"size":1180,"mtime":1609061258782,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607223593056,"results":"17","hashOfConfig":"15"},{"size":2551,"mtime":1609060438489,"results":"18","hashOfConfig":"15"},{"size":1771,"mtime":1608975397912,"results":"19","hashOfConfig":"15"},{"size":672,"mtime":1608784080714,"results":"20","hashOfConfig":"15"},{"size":739,"mtime":1607443048573,"results":"21","hashOfConfig":"15"},{"size":3114,"mtime":1609061010180,"results":"22","hashOfConfig":"15"},{"size":263848,"mtime":1608975397936,"results":"23","hashOfConfig":"15"},{"size":2400,"mtime":1608807252918,"results":"24","hashOfConfig":"15"},{"size":617,"mtime":1608794279606,"results":"25","hashOfConfig":"15"},{"size":1291,"mtime":1609228799940,"results":"26","hashOfConfig":"15"},{"size":406,"mtime":1609062063601,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"12vj9oc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"/home/zaheer/MyProjects/covid19-tracker/src/index.js",[],["62","63"],"/home/zaheer/MyProjects/covid19-tracker/src/App.js",["64","65","66","67"],"import logo from './logo.svg';\nimport './App.css';\nimport GlobalStats from './components/GlobalStats';\nimport { Container } from '@material-ui/core';\nimport CountryStats from './components/CountryStats';\nimport { Suspense, useState } from 'react';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { fetchCountryData } from './api/endpoints';\nimport { AppHeader } from \"./components/AppHeader\";\nimport CountryDropdown from './components/CountryDropdown';\nimport AppFooter from './components/AppFooter';\n\nfunction App() {\n  \n  return (\n    <Container maxWidth=\"md\">\n      <AppHeader />\n      <h1 style={{textAlign: \"center\"}}>Global Statistics</h1>\n      <ErrorBoundary>\n      <Suspense fallback={<div className=\"loader\"></div>}>\n          <GlobalStats />\n          <canvas id=\"GlobalChart\" width=\"400\" height=\"400\" aria-label=\"Global Time Series Data\" role=\"img\">\n          \n          </canvas><CountryDropdown />\n      </Suspense>\n      </ErrorBoundary>\n      \n      <canvas id=\"CountryChart\" width=\"400\" height=\"400\" aria-label=\"Country Time Series Data\" role=\"img\">\n            \n      </canvas>\n      <AppFooter />\n    </Container>\n  );\n  \n}\n\n\nexport default App;\n","/home/zaheer/MyProjects/covid19-tracker/src/reportWebVitals.js",[],["68","69"],"/home/zaheer/MyProjects/covid19-tracker/src/components/GlobalStats.jsx",["70","71"],"import {fetchGlobalStats} from '../api/endpoints'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { useState } from \"react\";\nimport { GlobalTimeSeriesChart } from \"../CovidCharts\";\n\n\n const resource = fetchGlobalStats();\nfunction GlobalStats() {\n    const stats = resource.totals.read();\n    const timeSeriesResult = resource.timeSeriesData.read();\n    GlobalTimeSeriesChart(document.getElementById(\"GlobalChart\"), timeSeriesResult);\n\n    const useStyles = makeStyles((theme) => ({\n      root: {\n        flexGrow: 1,\n      },\n      cases: {\n        padding: theme.spacing(1),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'DarkOrchid', \n        '&:hover': {\n          background: 'DarkMagenta',\n        }\n      },\n      recovered: {\n        padding: theme.spacing(1),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'LimeGreen',\n        '&:hover': {\n          background: 'ForestGreen',\n        }\n      },\n      deaths: {\n        padding: theme.spacing(1),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'HotPink',\n        '&:hover': {\n          background: 'Fuchsia',\n        }\n      },\n    }));\n    const classes = useStyles();\n\n  return (\n      <div>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper elevation={3} className={classes.cases}>Total Cases<p> <strong>{stats.cases}</strong> </p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.recovered}>Total Recovered<p><strong> {stats.recovered}</strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.deaths}>Total Deaths<p><strong> {stats.deaths} </strong></p></Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper className={classes.cases}>Today Cases<p><strong> {stats.todayCases} </strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.recovered}>Today Recovered<p><strong> {stats.todayRecovered}</strong></p></Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.deaths}>Today Deaths<p><strong> {stats.todayDeaths}</strong></p></Paper>\n        </Grid>\n      </Grid>\n      </div>\n  )\n}\n\nexport default GlobalStats  \n\n","/home/zaheer/MyProjects/covid19-tracker/src/api/endpoints.js",["72","73"],"import wrapPromise from './wrapPromise';\nimport React from 'react';\nimport CountryContext from \"../context/CountryContext\";\n\nconst globalStatsUrl = 'https://disease.sh/v3/covid-19/all';\nconst countryStatsUrl = 'https://disease.sh/v3/covid-19/countries/';\nconst countryTimeSeriesUrl = \"https://disease.sh/v3/covid-19/historical/\";\nconst globalTimeSeries = \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\";\n\nfunction fetchGlobalStats(){\n    let totalsPromise = fetchGlobalTotals();\n    let timeSeriesPromise = fetchGlobalTimeSeries();\n\n    return {\n        totals: wrapPromise(totalsPromise),\n        timeSeriesData: wrapPromise(timeSeriesPromise),\n    };\n}\n\nfunction fetchGlobalTotals() {\n    console.log(\"fetching global totals....\");\n    let promise = fetch(globalStatsUrl)\n        .then((res) => res.json())\n        return promise;\n}\nfunction fetchGlobalTimeSeries(){\n    console.log(\"fetching global time series....\");\n    let promise = fetch(globalTimeSeries)\n        .then((res) => res.json())\n        return promise;\n}\n\nfunction fetchCountryData(name) {\n    let countryTotals = fetchCountryTotals(name);\n    let countryTimeSeries = fetchCountryTimeSeries(name);\n\n    return {\n        cTotals: wrapPromise(countryTotals),\n        cTimeSeriesData: wrapPromise(countryTimeSeries)\n    };\n}\n\nfunction fetchCountryTotals(name) {\n    console.log(\"fetching country totals for \"+ name);\n    let promise = fetch(countryStatsUrl+name)\n    .then((res)=> (res.json()))\n\n    return promise;\n}\n\nfunction fetchCountryTimeSeries(name) {\n    console.log(\"fetching country time series data for \"+ name);\n    let promise = fetch(countryTimeSeriesUrl+name+\"?lastdays=all\")\n        .then((res)=> res.json());\n\n    return promise;\n}\n\nexport {fetchGlobalStats,fetchCountryData}","/home/zaheer/MyProjects/covid19-tracker/src/api/wrapPromise.js",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/ErrorBoundary.jsx",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/CountryStats.jsx",["74","75","76","77"],"import React, { useState } from 'react';  \nimport CountryContext from '../context/CountryContext';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { CountryTimeSeriesChart } from \"../CovidCharts\";\nimport { fetchCountryData } from '../api/endpoints';\n\n// var resource = fetchCountryData(countryNmae);\nfunction CountryStats(props){\n    const resource = props.resource;\n    const response = resource.cTotals.read();\n    const counteries =React.useContext(CountryContext)[0];\n    const timeSeriesResult = props.resource.cTimeSeriesData.read();\n    CountryTimeSeriesChart(document.getElementById(\"CountryChart\").getContext('2d'), timeSeriesResult, props.countryName);\n    \n    const useStyles = makeStyles((theme) => ({\n      root: {\n        flexGrow: 1,\n      },\n      cases: {\n        padding: theme.spacing(1),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'DarkOrchid', \n        '&:hover': {\n          background: 'DarkMagenta',\n        }\n      },\n      recovered: {\n        padding: theme.spacing(1),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'LimeGreen',\n        '&:hover': {\n          background: 'ForestGreen',\n        }\n      },\n      deaths: {\n        padding: theme.spacing(1),\n        textAlign: 'center',        \n        color: 'white',\n        borderRadius: '20px',\n        background: 'HotPink',\n        '&:hover': {\n          background: 'Fuchsia',\n        }\n      },\n    }));\n    const classes = useStyles();\n    \n    return(\n            <div>\n                <h3 className=\"error\">{response.message}</h3>\n                <Grid container spacing={3}>\n                    <Grid item xs>\n                    <Paper className={classes.cases}>Total Cases<p> <strong>{response.cases}</strong> </p></Paper>\n                    </Grid>\n                    <Grid item xs>\n                    <Paper className={classes.recovered}>Total Recovered<p><strong> {response.recovered}</strong></p></Paper>\n                    </Grid>\n                    <Grid item xs>\n                    <Paper className={classes.deaths}>Total Deaths<p><strong> {response.deaths} </strong></p></Paper>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                    <Grid item xs>\n                    <Paper className={classes.cases}>Today Cases<p><strong> {response.todayCases} </strong></p></Paper>\n                    </Grid>\n                    <Grid item xs>\n                    <Paper className={classes.recovered}>Today Recovered<p><strong> {response.todayRecovered}</strong></p></Paper>\n                    </Grid>\n                    <Grid item xs>\n                    <Paper className={classes.deaths}>Today Deaths<p><strong> {response.todayDeaths}</strong></p></Paper>\n                    </Grid>\n                </Grid>\n                </div>\n    )\n}\n\nexport default CountryStats","/home/zaheer/MyProjects/covid19-tracker/src/context/CountryContext.js",[],"/home/zaheer/MyProjects/covid19-tracker/src/CovidCharts.js",["78","79"],"import Chart from \"chart.js\";\n\nvar tChartData = {\n    // labels: ['Red', 'Blue', 'Yellow'],\n    datasets: [{\n        label: 'Confirmed Cases',\n        // data: [12,50,30,],\n        hoverBackgroundColor: 'pink',\n        borderWidth: 2,\n        fill: false,\n        borderColor: 'cyan'\n    },\n    {\n        label: 'Recovered',\n        // data: [12,50,30,],\n        hoverBackgroundColor: 'LimeGreen',\n        borderWidth: 2,\n        fill: false,\n        borderColor: 'ForestGreen'\n    },\n    {\n        label: 'Deaths',\n        // data: [12,50,30,],\n        hoverBackgroundColor: 'Fuchsia',\n        borderWidth: 2,\n        fill: false,\n        borderColor: 'HotPink'\n    }]\n};\n\nvar tChartOptions = {\n    scales: {\n        yAxes: [{\n            ticks: {\n                beginAtZero: true\n            }\n        }]\n    },\n    elements: {\n        point:{\n            radius: 0\n        }\n    },\n};\n\nfunction CountryTimeSeriesChart(ctx, data, titleText) {\n    var timeSeriesChart = new Chart(ctx, {\n        type: 'line',\n        data: tChartData,\n        options: tChartOptions\n    });\n    timeSeriesChart.options.title = {display: true, text: \"Historical data for \"+titleText};\n    var dates = Object.keys(data.timeline.cases);\n    var activeCases = Object.values(data.timeline.cases);\n    var recovered = Object.values(data.timeline.recovered);\n    var deaths = Object.values(data.timeline.deaths);\n    const AllData = new Array(activeCases, recovered, deaths);\n    console.log(AllData);\n    addTimeSeriesData(timeSeriesChart, dates, AllData);\n};\n\nfunction GlobalTimeSeriesChart(ctx, data) {\n    var timeSeriesChart = new Chart(ctx, {\n        type: 'line',\n        data: tChartData,\n        options: tChartOptions\n    });\n    var dates = Object.keys(data.cases);\n    var activeCases = Object.values(data.cases);\n    var recovered = Object.values(data.recovered);\n    var deaths = Object.values(data.deaths);\n    const AllData = new Array(activeCases, recovered, deaths);\n    console.log(AllData);\n    addTimeSeriesData(timeSeriesChart, dates, AllData);\n};\n\nfunction addTimeSeriesData(chart, label, data) {\n    chart.data.datasets.forEach((dataset) => {\n        dataset.data.pop();\n    });\n    chart.update();\n    chart.data.labels=label;\n\n    chart.data.datasets.forEach((dataset, i) => {\n        dataset.data = data[i];\n    });\n    chart.update();\n}\n\nexport { CountryTimeSeriesChart, GlobalTimeSeriesChart }","/home/zaheer/MyProjects/covid19-tracker/src/components/AppHeader.jsx",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/CountryDropdown.jsx",[],"/home/zaheer/MyProjects/covid19-tracker/src/components/AppFooter.jsx",["80"],"import { blueGrey } from \"@material-ui/core/colors\";\nimport React from \"react\";\n\nconst AppFooter = () =>{\n    return(\n        <div style={{background: '#3f51b5', color: \"white\",textAlign: 'center', height: '10%'}}>\n            <p>Powered by <a style={{color: \"white\"}} href=\"https://www.panacloud.ai/\">Panacloud</a> </p>\n            <p>© Panacloud 2021</p>\n        </div>\n    )\n}\n\nexport default AppFooter",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":12},{"ruleId":"85","severity":1,"message":"89","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":20},{"ruleId":"85","severity":1,"message":"90","line":6,"column":20,"nodeType":"87","messageId":"88","endLine":6,"endColumn":28},{"ruleId":"85","severity":1,"message":"91","line":8,"column":10,"nodeType":"87","messageId":"88","endLine":8,"endColumn":26},{"ruleId":"81","replacedBy":"92"},{"ruleId":"83","replacedBy":"93"},{"ruleId":"85","severity":1,"message":"94","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":17},{"ruleId":"85","severity":1,"message":"90","line":6,"column":10,"nodeType":"87","messageId":"88","endLine":6,"endColumn":18},{"ruleId":"85","severity":1,"message":"95","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":13},{"ruleId":"85","severity":1,"message":"96","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":22},{"ruleId":"85","severity":1,"message":"90","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"94","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":17},{"ruleId":"85","severity":1,"message":"91","line":8,"column":10,"nodeType":"87","messageId":"88","endLine":8,"endColumn":26},{"ruleId":"85","severity":1,"message":"97","line":14,"column":11,"nodeType":"87","messageId":"88","endLine":14,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":57,"column":21,"nodeType":"100","messageId":"101","endLine":57,"endColumn":62},{"ruleId":"98","severity":1,"message":"99","line":72,"column":21,"nodeType":"100","messageId":"101","endLine":72,"endColumn":62},{"ruleId":"85","severity":1,"message":"102","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":18},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CountryStats' is defined but never used.","'useState' is defined but never used.","'fetchCountryData' is defined but never used.",["103"],["104"],"'Container' is defined but never used.","'React' is defined but never used.","'CountryContext' is defined but never used.","'counteries' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'blueGrey' is defined but never used.","no-global-assign","no-unsafe-negation"]